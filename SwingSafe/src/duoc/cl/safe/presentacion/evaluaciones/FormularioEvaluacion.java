/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duoc.cl.safe.presentacion.evaluaciones;

import duoc.cl.safe.entity.SsfEmpresa;
import duoc.cl.safe.entity.SsfEvaluaciontipo;
import duoc.cl.safe.entity.SsfEvaluacion;
import duoc.cl.safe.entity.SsfEvaluacionestado;
import duoc.cl.safe.entity.SsfEvaluacionparametro;
import duoc.cl.safe.herramientas.FormsController;
import duoc.cl.safe.negocio.SsfEmpresaBO;
import duoc.cl.safe.negocio.SsfEvaluaciontipoBO;
import duoc.cl.safe.negocio.SsfEvaluacionBO;
import duoc.cl.safe.negocio.SsfEvaluacionestadoBO;
import duoc.cl.safe.negocio.SsfEvaluacionparametroBO;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.apache.log4j.Level;

import org.apache.log4j.PropertyConfigurator;

/**
 *
 * @author Nacho
 */
public class FormularioEvaluacion extends javax.swing.JFrame {

    /**
     * Creates new form MantenedorEvaluación
     */
    public FormularioEvaluacion() {
        initComponents();
        PropertyConfigurator.configure("log4j.properties");
        resizeTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgParametro = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfEvaluacion = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEvaluacion = new javax.swing.JTable();
        lExito = new javax.swing.JLabel();
        lError = new javax.swing.JLabel();
        tbEstado = new javax.swing.JToggleButton();
        bModificar = new javax.swing.JButton();
        bAgregar = new javax.swing.JButton();
        bLimpiar = new javax.swing.JButton();
        cbTipoEval = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        tfFecha = new javax.swing.JTextField();
        cbEstadoEval = new javax.swing.JComboBox<>();
        cbEmpresa = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstParametro = new javax.swing.JList<>();
        lParametro = new javax.swing.JLabel();
        rSi = new javax.swing.JRadioButton();
        rNo = new javax.swing.JRadioButton();
        rPendiente = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taObservacion = new javax.swing.JTextArea();
        bModificarParametro = new javax.swing.JButton();
        lErrorParametro = new javax.swing.JLabel();
        lExitoParametro = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblParametro = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Título Evaluación:");

        jLabel2.setText("Fecha:");

        tblEvaluacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Evaluación", "Fecha", "Empresa", "Estado Evaluación", "Tipo Evaluación", "Fecha Creación", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEvaluacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEvaluacionMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEvaluacion);

        lExito.setForeground(new java.awt.Color(0, 204, 51));

        lError.setForeground(new java.awt.Color(255, 0, 0));

        tbEstado.setText("Activo");
        tbEstado.setEnabled(false);
        tbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbEstadoActionPerformed(evt);
            }
        });

        bModificar.setText("Guardar");
        bModificar.setEnabled(false);
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        bAgregar.setText("Agregar");
        bAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarActionPerformed(evt);
            }
        });

        bLimpiar.setText("Nuevo");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        cbTipoEval.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Seleccione Tipo Evaluación -" }));
        cbTipoEval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoEvalActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo Evaluación:");

        tfFecha.setText("dd-MM-aaaa");

        cbEstadoEval.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Seleccione Estado Evaluación -" }));

        cbEmpresa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Seleccione Empresa -" }));

        jLabel4.setText("Estado Evaluación:");

        jLabel5.setText("Empresa:");

        jLabel6.setText("Parámetros Evaluación:");

        lstParametro.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "- Seleccione un Parámetro -" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstParametro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstParametroMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstParametro);

        lParametro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lParametro.setText("[Parámetro]");
        lParametro.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        bgParametro.add(rSi);
        rSi.setText("Sí");

        bgParametro.add(rNo);
        rNo.setText("No");

        bgParametro.add(rPendiente);
        rPendiente.setText("Pendiente");

        jLabel7.setText("Observación:");

        taObservacion.setColumns(20);
        taObservacion.setLineWrap(true);
        taObservacion.setRows(5);
        jScrollPane1.setViewportView(taObservacion);

        bModificarParametro.setText("Modificar Parámetro");
        bModificarParametro.setEnabled(false);
        bModificarParametro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarParametroActionPerformed(evt);
            }
        });

        lErrorParametro.setForeground(new java.awt.Color(255, 51, 0));

        lExitoParametro.setForeground(new java.awt.Color(0, 204, 51));

        tblParametro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parámetro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblParametro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblParametroMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblParametro);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 102));
        jLabel8.setText("Formulario Evaluación");

        jMenu1.setText("Cargando...");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lExitoParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lErrorParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bModificarParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rNo)
                                    .addComponent(rPendiente)
                                    .addComponent(rSi))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lExito, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbEmpresa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbEstadoEval, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbTipoEval, 0, 208, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bAgregar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bModificar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bLimpiar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lParametro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoEval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(tfEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEstadoEval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tfFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(bAgregar)
                    .addComponent(bLimpiar)
                    .addComponent(bModificar)
                    .addComponent(tbEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lExito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(lParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rSi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rNo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rPendiente)
                        .addGap(18, 18, 18)
                        .addComponent(bModificarParametro)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lErrorParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lExitoParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setJMenuBar(formsController.getMenu().getMenuBar());
        formsController.getMenu().setjFrame(this);
        this.setLocationRelativeTo(null);
        cargaTabla();
        cargaEvaluacionTipo();
        cargaEmpresa();
        cargaEvaluacionEstado();
    }//GEN-LAST:event_formWindowOpened

    private void tblEvaluacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEvaluacionMouseClicked
        limpiarMsgs();
        tbEstado.setEnabled(true);
        bModificar.setEnabled(true);

        limpiarParametro();
        DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
        if (Integer.parseInt(model.getValueAt(tblEvaluacion.getSelectedRow(), 7).toString()) == 1) {
            tbEstado.setSelected(false);
            activarEstado();
        } else {
            tbEstado.setSelected(true);
            desactivarEstado();
        }
        if (model.getValueAt(tblEvaluacion.getSelectedRow(), 1) != null) {
            tfEvaluacion.setText(model.getValueAt(tblEvaluacion.getSelectedRow(), 1).toString());
        } else {
            tfEvaluacion.setText("");
        }
        if (model.getValueAt(tblEvaluacion.getSelectedRow(), 2) != null) {
            tfFecha.setText(model.getValueAt(tblEvaluacion.getSelectedRow(), 2).toString());
        } else {
            tfFecha.setText("");
        }
        if (model.getValueAt(tblEvaluacion.getSelectedRow(), 3) != null) {
            cbEmpresa.setSelectedItem(model.getValueAt(tblEvaluacion.getSelectedRow(), 3).toString());
        } else {
            cbEmpresa.setSelectedIndex(0);
        }
        if (model.getValueAt(tblEvaluacion.getSelectedRow(), 4) != null) {
            cbEstadoEval.setSelectedItem(model.getValueAt(tblEvaluacion.getSelectedRow(), 4).toString());
        } else {
            cbEstadoEval.setSelectedIndex(0);
        }
        if (model.getValueAt(tblEvaluacion.getSelectedRow(), 5) != null) {
            cbTipoEval.setSelectedItem(model.getValueAt(tblEvaluacion.getSelectedRow(), 5).toString());
        } else {
            cbTipoEval.setSelectedIndex(0);
        }
        if (cbTipoEval.getSelectedIndex() != 0) {
            //cargaParametroTabla(cbTipoEval.getSelectedItem().toString());
            cargaParametroList(cbTipoEval.getSelectedItem().toString());
        }

    }//GEN-LAST:event_tblEvaluacionMouseClicked

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        tbEstado.setEnabled(false);
        bModificar.setEnabled(false);
        limpiarMsgs();
        tblEvaluacion.clearSelection();
        tfEvaluacion.setText("");
        tfFecha.setText("dd-MM-aaaa");
        cbTipoEval.setSelectedIndex(0);
        cbEstadoEval.setSelectedIndex(0);
        cbEmpresa.setSelectedIndex(0);
        limpiarParametro();
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void tbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbEstadoActionPerformed
        limpiarMsgs();
        DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
        ebo = new SsfEvaluacionBO();

        if (tblEvaluacion.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
            if (tblEvaluacion.getRowCount() == 0) {
                lError.setText("Tabla vacía");
            } else {
                lError.setText("No hay fila seleccionada");
            }
        } else {
            int id = Short.parseShort(model.getValueAt(tblEvaluacion.getSelectedRow(), 0).toString());
            if (!tbEstado.isSelected()) {
                if (ebo.activarSP(id)) {
                    activarEstado();
                    model.setValueAt("1", tblEvaluacion.getSelectedRow(), 7);
                }
            } else {
                if (ebo.desactivarSP(id)) {
                    desactivarEstado();
                    model.setValueAt("0", tblEvaluacion.getSelectedRow(), 7);
                }
            }
        }
    }//GEN-LAST:event_tbEstadoActionPerformed

    private void bAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarActionPerformed
        ebo = new SsfEvaluacionBO();
        limpiarMsgs();
        if (tfEvaluacion.getText().trim().equals("")) {
            lError.setText("Nombre Evaluación no puede quedar en blanco");
        } else if (cbTipoEval.getSelectedIndex() == 0) {
            lError.setText("Seleccione un tipo evaluación");
        } else if (cbEstadoEval.getSelectedIndex() == 0) {
            lError.setText("Seleccione un estado evaluación");
        } else {
            String sfech, nom, idtipoeval, idestadoeval, idempresa;
            Date fecha = null;
            nom = tfEvaluacion.getText();
            sfech = tfFecha.getText();
            idtipoeval = mapte.get(cbTipoEval.getSelectedItem()).toString();
            idestadoeval = mapee.get(cbEstadoEval.getSelectedItem()).toString();
            idempresa = mape.get(cbEmpresa.getSelectedItem()).toString();
            SsfEvaluacion e = new SsfEvaluacion();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            try {
                if (!sfech.equals("") && !sfech.toLowerCase().equals("dd-MM-aaaa".toLowerCase())) {
                    if (sfech.length() < 10) {
                        sdf = new SimpleDateFormat("dd-MM-yy");
                    }
                    fecha = sdf.parse(sfech);
                    e.setFecha(fecha);
                }
            } catch (ParseException ex) {
                log.log(Level.ERROR, "Error en formato de fecha", ex);
                lError.setText("Error en formato de fecha");
            }
            e.setNombre(nom);
            e.setIdEvaluaciontipo(new SsfEvaluaciontipo(BigDecimal.valueOf((long) Long.valueOf(idtipoeval))));
            e.setIdEvaluacionestado(new SsfEvaluacionestado(BigDecimal.valueOf((long) Long.valueOf(idestadoeval))));
            e.setIdEmpresa(new SsfEmpresa(BigDecimal.valueOf((long) Long.valueOf(idempresa))));
            if (ebo.addSP(e)) {
                lExito.setText("Evaluación agregada exitosamente.");
                cargaTabla();
            } else {
                lError.setText("No se pudo agregar");
            }
        }
        lep = new SsfEvaluacionparametroBO().getAllSP();
    }//GEN-LAST:event_bAgregarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
        ebo = new SsfEvaluacionBO();
        limpiarMsgs();
        if (tblEvaluacion.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
            if (tblEvaluacion.getRowCount() == 0) {
                lError.setText("Tabla vacía");
            } else {
                lError.setText("No hay fila seleccionada");
            }
        } else {
            if (tfEvaluacion.getText().trim().equals("")) {
                lError.setText("Nombre Evaluación no puede quedar en blanco");
            } else if (cbTipoEval.getSelectedIndex() == 0) {
                lError.setText("Seleccione un tipo evaluación");
            } else if (cbEstadoEval.getSelectedIndex() == 0) {
                lError.setText("Seleccione un estado evaluación");
            } else {
                String sfech, nom, id, idtipoeval, idestadoeval, idempresa;
                id = model.getValueAt(tblEvaluacion.getSelectedRow(), 0).toString();
                nom = tfEvaluacion.getText().trim();
                sfech = tfFecha.getText().trim();
                idtipoeval = mapte.get(cbTipoEval.getSelectedItem()).toString();
                idestadoeval = mapee.get(cbEstadoEval.getSelectedItem()).toString();
                idempresa = mape.get(cbEmpresa.getSelectedItem()).toString();
                SsfEvaluacion e = new SsfEvaluacion();
                Date fecha = null;
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                try {
                    if (!sfech.equals("") && !sfech.toLowerCase().equals("dd-MM-aaaa".toLowerCase())) {
                        if (sfech.length() < 10) {
                            sdf = new SimpleDateFormat("dd-MM-yy");
                        }
                        fecha = sdf.parse(sfech);
                        e.setFecha(fecha);
                    }
                } catch (ParseException ex) {
                    log.log(Level.ERROR, "Error en formato de fecha", ex);
                    sfech = "error";
                    lError.setText("Error en formato de fecha");
                }
                e.setId(BigDecimal.valueOf(Long.valueOf(id)));
                e.setNombre(nom);
                e.setIdEvaluaciontipo(new SsfEvaluaciontipo(BigDecimal.valueOf((long) Long.valueOf(idtipoeval))));
                e.setIdEvaluacionestado(new SsfEvaluacionestado(BigDecimal.valueOf((long) Long.valueOf(idestadoeval))));
                e.setIdEmpresa(new SsfEmpresa(BigDecimal.valueOf((long) Long.valueOf(idempresa))));
                if (ebo.updateSP(e)) {
                    lExito.setText("Evaluación modificada exitosamente.");
                    model.setValueAt(nom, tblEvaluacion.getSelectedRow(), 1);
                    model.setValueAt(cbEmpresa.getSelectedItem(), tblEvaluacion.getSelectedRow(), 3);
                    model.setValueAt(cbEstadoEval.getSelectedItem(), tblEvaluacion.getSelectedRow(), 4);
                    model.setValueAt(cbTipoEval.getSelectedItem(), tblEvaluacion.getSelectedRow(), 5);
                    if (!sfech.equals("error") && fecha != null) {
                        sdf = new SimpleDateFormat("dd-MM-yyyy");
                        model.setValueAt(sdf.format(fecha), tblEvaluacion.getSelectedRow(), 2);
                    }
                } else {
                    lError.setText("No se pudo modificar");
                }
            }
        }
        lep = new SsfEvaluacionparametroBO().getAllSP();
    }//GEN-LAST:event_bModificarActionPerformed

    private void cbTipoEvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoEvalActionPerformed
        limpiarMsgs();
        limpiarParametro();
        //cargaParametroTabla(cbTipoEval.getSelectedItem().toString());
        cargaParametroList(cbTipoEval.getSelectedItem().toString());
    }//GEN-LAST:event_cbTipoEvalActionPerformed

    private void lstParametroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstParametroMouseClicked
        lstParametro.removeAll();
        bModificarParametro.setEnabled(true);
        limpiarMsgs();
        cargaParametroEv();
    }//GEN-LAST:event_lstParametroMouseClicked

    private void tblParametroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblParametroMouseClicked
        limpiarMsgs();
        cargaParametroEv();
    }//GEN-LAST:event_tblParametroMouseClicked

    private void bModificarParametroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarParametroActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
        SsfEvaluacionparametroBO epbo = new SsfEvaluacionparametroBO();
        limpiarMsgs();
        if (tblEvaluacion.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
            lErrorParametro.setText("No hay fila evaluación seleccionada");
        } else if (tblEvaluacion.getRowCount() == 0) {
            lErrorParametro.setText("Tabla evaluación vacía");
        } /*else if (tblParametro.getRowCount() == -1) {
            lErrorParametro.setText("Tabla parámetro vacía");
        } */ else if (lstParametro.getSelectedIndex() == -1) {
            lErrorParametro.setText("No hay lista seleccionada");
        } else {
            SsfEvaluacionparametro ep = null;
            Short aprueba;
            for (Map.Entry<String, SsfEvaluacionparametro> entry : mapep.entrySet()) {
                if (entry.getValue().getIdParametro().getParametro().equalsIgnoreCase(lstParametro.getSelectedValue())) {
                    ep = entry.getValue();
                }
            }
            if (ep != null) {
                ep.setObservacion(taObservacion.getText());
                if (rSi.isSelected()) {
                    aprueba = 1;
                } else if (rNo.isSelected()) {
                    aprueba = 0;
                } else {
                    aprueba = -1;
                }
                ep.setAprueba(aprueba);
                if (epbo.updateSP(ep)) {
                    lExitoParametro.setText("Parámetro evaluación modificado exitosamente.");

                } else {
                    lErrorParametro.setText("No se pudo modificar");
                }
            } else {
                lErrorParametro.setText("No se pudo modificar");
            }
        }
    }//GEN-LAST:event_bModificarParametroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioEvaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioEvaluacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton bModificar;
    private javax.swing.JButton bModificarParametro;
    private javax.swing.ButtonGroup bgParametro;
    private javax.swing.JComboBox<String> cbEmpresa;
    private javax.swing.JComboBox<String> cbEstadoEval;
    private javax.swing.JComboBox<String> cbTipoEval;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lError;
    private javax.swing.JLabel lErrorParametro;
    private javax.swing.JLabel lExito;
    private javax.swing.JLabel lExitoParametro;
    private javax.swing.JLabel lParametro;
    private javax.swing.JList<String> lstParametro;
    private javax.swing.JRadioButton rNo;
    private javax.swing.JRadioButton rPendiente;
    private javax.swing.JRadioButton rSi;
    private javax.swing.JTextArea taObservacion;
    private javax.swing.JToggleButton tbEstado;
    private javax.swing.JTable tblEvaluacion;
    private javax.swing.JTable tblParametro;
    private javax.swing.JTextField tfEvaluacion;
    private javax.swing.JTextField tfFecha;
    // End of variables declaration//GEN-END:variables

    private SsfEvaluacionBO ebo;
    List<SsfEvaluacionparametro> lep;
    private HashMap<String, Integer> mapte = new HashMap<>();
    private HashMap<String, Integer> mape = new HashMap<>();
    private HashMap<String, Integer> mapee = new HashMap<>();
    private HashMap<String, SsfEvaluacionparametro> mapep;
    private static Logger log = Logger.getLogger(FormularioEvaluacion.class.getName());
    private FormsController formsController;

    public void setFormsController(FormsController formsController) {
        this.formsController = formsController;
    }

    public void cargaEvaluacionTipo() {
        SsfEvaluaciontipoBO etbo = new SsfEvaluaciontipoBO();
        List<SsfEvaluaciontipo> etlist = etbo.getAllSP();
        etlist.forEach((et) -> {
            mapte.put(et.getTipo(), et.getId().intValue());
        });
        etlist.forEach((et) -> {
            cbTipoEval.addItem(et.getTipo());
        });
    }

    public void cargaEvaluacionEstado() {
        SsfEvaluacionestadoBO eebo = new SsfEvaluacionestadoBO();
        List<SsfEvaluacionestado> eelist = eebo.getAllSP();
        eelist.forEach((ee) -> {
            mapee.put(ee.getEstadoeval(), ee.getId().intValue());
        });
        eelist.forEach((ee) -> {
            cbEstadoEval.addItem(ee.getEstadoeval());
        });
    }

    public void cargaEmpresa() {
        SsfEmpresaBO embo = new SsfEmpresaBO();
        List<SsfEmpresa> elist = embo.getAllSP();
        elist.forEach((e) -> {
            mape.put(e.getNombre(), e.getId().intValue());
        });
        elist.forEach((e) -> {
            cbEmpresa.addItem(e.getNombre());
        });
    }

    private void cargaTabla() {
        
        DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
        model.setRowCount(0);
        ebo = new SsfEvaluacionBO();
        List<SsfEvaluacion> le = ebo.getAllSP();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String sfecha = null;
        for (SsfEvaluacion e : le) {
            if (e.getFecha() != null) {
                sfecha = sdf.format(e.getFecha());
            } else {
                sfecha = "";
            }
            model.addRow(new Object[]{e.getId(), e.getNombre(), sfecha, e.getIdEmpresa().getNombre(), e.getIdEvaluacionestado().getEstadoeval(), e.getIdEvaluaciontipo().getTipo(), sdf.format(e.getFechCreacion()), e.getEstado()});
        }
        tblEvaluacion.setModel(model);
    }
    
    private void desactivarEstado() {
        tbEstado.setText("Desactivado");
        tbEstado.setBackground(new java.awt.Color(255, 51, 51));
    }

    private void activarEstado() {
        tbEstado.setText("Activo");
        tbEstado.setBackground(new java.awt.Color(0, 204, 102));
    }

    private void limpiarMsgs() {
        lExito.setText("");
        lError.setText("");
        lExitoParametro.setText("");
        lErrorParametro.setText("");
    }

    /* alternativa a Lista parametros
    private void cargaParametroTabla(String tipoeval) {
        borrarTablaParametro();
        DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblParametro.getModel();
        SsfEvaluacionparametroBO epbo = new SsfEvaluacionparametroBO();
        if (lep == null) {
            lep = epbo.getAllSP();
        }
        int id = Integer.parseInt(model.getValueAt(tblEvaluacion.getSelectedRow(), 0).toString());
        mapep = new HashMap<>();
        for (SsfEvaluacionparametro ep : lep) {
            if (ep.getIdEvaluacion() != null) {
                if (ep.getIdEvaluacion().getId().intValue() == id) {
                    mapep.put(ep.getIdParametro().getParametro(), ep);
                }
            }
        }

        for (Map.Entry<String, SsfEvaluacionparametro> entry : mapep.entrySet()) {
            if (entry.getValue().getIdParametro().getIdEvaluaciontipo().getTipo().equalsIgnoreCase(tipoeval)
                    && entry.getValue().getIdEvaluacion().getIdEvaluaciontipo().getTipo().equalsIgnoreCase(entry.getValue().getIdParametro().getIdEvaluaciontipo().getTipo())) {
                model2.addRow(new Object[]{entry.getValue().getIdParametro().getParametro()});
            }
        }
        tblParametro.setModel(model2);
    }*/
    private void cargaParametroList(String tipoeval) {
        if (tblEvaluacion.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
            lErrorParametro.setText("No hay fila evaluación seleccionada");
        } else if (tblEvaluacion.getRowCount() == 0) {
            lErrorParametro.setText("Tabla evaluación vacía");
        } else {
            lstParametro.removeAll();
            DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
            DefaultListModel lmodel = new DefaultListModel();
            SsfEvaluacionparametroBO epbo = new SsfEvaluacionparametroBO();
            if (lep == null) {
                lep = epbo.getAllSP();
            }
            int id = Integer.parseInt(model.getValueAt(tblEvaluacion.getSelectedRow(), 0).toString());
            mapep = new HashMap<>();
            for (SsfEvaluacionparametro ep : lep) {
                if (ep.getIdEvaluacion() != null) {
                    if (ep.getIdEvaluacion().getId().intValue() == id) {
                        mapep.put(ep.getIdParametro().getParametro(), ep);
                    }
                }
            }

            for (Map.Entry<String, SsfEvaluacionparametro> entry : mapep.entrySet()) {
                if (entry.getValue().getIdParametro().getIdEvaluaciontipo().getTipo().equalsIgnoreCase(tipoeval)
                        && entry.getValue().getIdEvaluacion().getIdEvaluaciontipo().getTipo().equalsIgnoreCase(entry.getValue().getIdParametro().getIdEvaluaciontipo().getTipo())) {
                    lmodel.addElement(entry.getValue().getIdParametro().getParametro());
                }
            }
            lstParametro.setModel(lmodel);
        }

    }

    private void cargaParametroEv() {
        DefaultTableModel model = (DefaultTableModel) tblEvaluacion.getModel();
        //DefaultTableModel model2 = (DefaultTableModel) tblParametro.getModel();
        String ideval = model.getValueAt(tblEvaluacion.getSelectedRow(), 0).toString();
        /*
        if (tblEvaluacion.getSelectedRow() == -1) {
            tbEstado.setEnabled(false);
        } else if(tblEvaluacion.getRowCount() == 0){
            lErrorParametro.setText("Tabla evaluación vacía");
        }else  if (tblParametro.getRowCount() == 0) {
            lErrorParametro.setText("Tabla parámetro vacía");
        } else */
        if (lstParametro.getSelectedIndex() == -1) {
            lErrorParametro.setText("No hay lista seleccionada");
        } else {
            //String lparametro = model2.getValueAt(tblParametro.getSelectedRow(), 0).toString();
            String lstparametro = lstParametro.getSelectedValue();
            System.out.println("Parámetro List: " + lstparametro);
            //System.out.println("Parámetro tbl: "+lparametro);
            if (mapep != null) {
                for (Map.Entry<String, SsfEvaluacionparametro> entry : mapep.entrySet()) {
                    if ((entry.getValue().getIdEvaluacion().getId().intValue() == Integer.parseInt(ideval)
                            || entry.getValue().getIdEvaluacion().getId().toString().equals(ideval))
                            && entry.getValue().getIdParametro().getParametro().equalsIgnoreCase(lstparametro)) { //lparametro
                        taObservacion.setText(entry.getValue().getObservacion());
                        switch (entry.getValue().getAprueba()) {
                            case 1:
                                rSi.setSelected(true);
                                break;
                            case 0:
                                rNo.setSelected(true);
                                break;
                            default:
                                rPendiente.setSelected(true);
                        }
                        lParametro.setText(entry.getValue().getIdParametro().getParametro());
                    }
                }
            }
        }
    }

    /*
    private void borrarTablaParametro() {
        tblParametro.removeAll();
        tblParametro.repaint();
        DefaultTableModel model = (DefaultTableModel) tblParametro.getModel();
        model.fireTableDataChanged();
        tblParametro.repaint();
        tblParametro.removeAll();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        tblParametro.removeAll();
        model.setRowCount(0);
        model.fireTableDataChanged();
        tblParametro.repaint();
        tblParametro.setModel(model);
        tblParametro.repaint();
        tblParametro.removeAll();
    }*/
    private void limpiarParametro() {
        taObservacion.setText("");
        rPendiente.setSelected(true);
        lParametro.setText("[ Parámetro ]");
        lstParametro.clearSelection();
        tblParametro.clearSelection();
        bModificarParametro.setEnabled(false);
    }

    private void resizeTabla() { 
        tblEvaluacion.getColumnModel().getColumn(0).setMaxWidth(40);
        tblEvaluacion.getColumnModel().getColumn(1).setMaxWidth(150);
        tblEvaluacion.getColumnModel().getColumn(2).setMaxWidth(80);
        tblEvaluacion.getColumnModel().getColumn(3).setMaxWidth(200);
        tblEvaluacion.getColumnModel().getColumn(4).setMaxWidth(120);
        tblEvaluacion.getColumnModel().getColumn(5).setMaxWidth(110);
        tblEvaluacion.getColumnModel().getColumn(6).setMaxWidth(110);
        tblEvaluacion.getColumnModel().getColumn(7).setMaxWidth(50);
    }
    
    
    
}
